<?php
/**
 * @file
 * Code for the Ding User Frontend feature.
 */

/**
 * To log out without changing to the frontpage use this link:
 * javascript: Drupal.ninja_logout();
 */

function ding_user_frontend_init() {
  drupal_add_js(drupal_get_path('module', 'ding_user_frontend') . '/js/user.js');
}

/**
 * Implements hook_menu()
 * @return string
 */
function ding_user_frontend_menu() {
  $items['user/ninja_logout'] = array(
    'title' => 'Logout',
    'description' => 'Silent logout',
    'page callback' => 'ding_user_frontend_ninja_logout',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    );
  return $items;
}

function ding_user_frontend_ninja_logout() {
  //copied from user_logout without drupal_goto
  global $user;
  watchdog('user', 'Session closed for %name.', array('%name' => $user->name));
  module_invoke_all('user_logout', $user);
  // Destroy the current session, and reset $user to the anonymous user.
  session_destroy();
  drupal_exit();
}

/**
 * Implements hook_preprocess_page().
 */
function ding_user_frontend_preprocess_page(&$variables) {
  // unset tabs in pages with panels that also has tabs.
  if (in_array('page__user', $variables['theme_hook_suggestions'])) {
    unset($variables['tabs']['#primary']);
    unset($variables['tabs']['#secondary']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add setting for password length.
 *
 * @todo this doesn't work after the new pincode field was added. Fix it up.
 */
function ding_user_frontend_form_user_admin_settings_alter(&$form, &$form_state, $form_id) {
  $form['ding_user_frontend'] = array(
    '#type' => 'fieldset',
    '#title' => t('User password settings'),
    '#weight' => -1,
  );

  $form['ding_user_frontend']['ding_user_frontend_password_length'] = array(
    '#type' => 'radios',
    '#title' => t('Password length'),
    '#options' => array(
      0 => t('Default'),
      4 => t('Max @number chars', array('@number' => 4)),
      5 => t('Max @number chars', array('@number' => 5)),
    ),
    '#default_value' => variable_get('ding_user_frontend_password_length', 0),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Remove locale form fields, if available.
 * Customize password form.
 */
function ding_user_frontend_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  // Hide the e-mail language picker.
  if (isset($form['locale'])) {
    $form['locale']['#access'] = FALSE;
  }
  $form['#after_build'][] = 'ding_user_frontend_user_profile_after_build';
}

/**
 * After build form processing.
 *
 * Remove user javascript that displays password hints.
 * Set maxlength on password fields.
 */
function ding_user_frontend_user_profile_after_build(&$form, &$form_state) {
  unset($form['account']['pass']['#attached']['js']);
  if (variable_get('ding_user_frontend_password_length', 0)) {
    $form['account']['pass']['pass1']['#maxlength'] = variable_get('ding_user_frontend_password_length', 0);
    $form['account']['pass']['pass2']['#maxlength'] = variable_get('ding_user_frontend_password_length', 0);
  }
  return $form;
}

/**
 * Implements hook_block_info().
 */
function ding_user_frontend_block_info() {
  $blocks = array();

  $blocks['ding-username'] = array(
    'info' => t('Ding user name'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['ding-user-loan-number'] = array(
    'info' => t('Ding loan, reservation, and debt count'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ding_user_frontend_block_view($delta = '') {
  $block = array();
  global $user;

  switch ($delta) {
    case 'ding-username':
      if ($user->uid > 0) {
        $name = (!empty($user->data['display_name'])) ? $user->data['display_name'] : $user->name;

        if (!empty($name)) {
          $block['content'] = theme('ding_user_frontend_user_name', array(
            'account' => $user,
            'name' => $name,
          ));
        }
      }
      break;
    case 'ding-user-loan-number':
      try {
        // We don't really need the credentials here, but getting them
        // causes an exception to be thrown if user is not
        // authenticated, exiting this block of code, which is what we
        // want. No credentials, no user status.
        ding_user_get_creds($user);

        $status = array();
        foreach (array('loan', 'reservation', 'debt') as $type) {
          $status[$type . '_count'] = ding_provider_implements($type, 'list') ? count(ding_provider_invoke_page($type, 'list', $user)) : 0;
        }
        $status['bookmark_count'] = ding_bookmark_count_number();
        $block['content'] = theme('ding_user_frontend_user_status', $status);
      } catch ( Exception $e ) { return; }

      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function ding_user_frontend_theme($existing, $type, $theme, $path) {
  return array(
    'ding_user_frontend_user_name' => array(
      'variables' => array('account' => NULL, 'name' => NULL),
      'template' => 'ding_user_frontend_user_name',
      'path' => $path . '/templates',
    ),
    'ding_user_frontend_user_status' => array(
      'variables' => array('loan_count' => NULL, 'reservation_count' => NULL, 'debt_count' => NULL),
      'template' => 'ding_user_frontend_user_status',
      'path' => $path . '/templates',
    ),
  );
}

include_once('ding_user_frontend.features.inc');

